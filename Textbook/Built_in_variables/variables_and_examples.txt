ARGC
It implies the number of arguments provided at the command line.

awk 'BEGIN {print "Arguments =", ARGC}' One Two Three Four

ARGV
It is an array that stores the command-line arguments. The array's valid index ranges from 0 to ARGC-1.

awk 'BEGIN { 
   for (i = 0; i < ARGC - 1; ++i) { 
      printf "ARGV[%d] = %s\n", i, ARGV[i] 
   } 
}' one two three four


CONVFMT
It represents the conversion format for numbers. Its default value is %.6g.

awk 'BEGIN { print "Conversion Format =", CONVFMT }'

ENVIRON
It is an associative array of environment variables.

awk 'BEGIN { print ENVIRON["USER"] }'

FILENAME
It represents the current file name

awk 'END {print FILENAME}' marks.txt

Please note that FILENAME is undefined in the BEGIN block.

FS
It represents the (input) field separator and its default value is space. You can also change this by using -F command line option.

awk 'BEGIN {print "FS = " FS}' | cat -vte

NF
It represents the number of fields in the current record. For instance, the following example prints only those lines that contain more than two fields.

echo -e "One Two\nOne Two Three\nOne Two Three Four" | awk 'NF > 2'

NR
It represents the number of the current record. For instance, the following example prints the record if the current record number is less than three.

echo -e "One Two\nOne Two Three\nOne Two Three Four" | awk 'NR < 3'

FNR
It is similar to NR, but relative to the current file. It is useful when AWK is operating on multiple files. Value of FNR resets with new file.

OFMT
It represents the output format number and its default value is %.6g.

awk 'BEGIN {print "OFMT = " OFMT}'

OFS
It represents the output field separator and its default value is space.

awk 'BEGIN {print "OFS = " OFS}' | cat -vte

ORS
It represents the output record separator and its default value is newline.

awk 'BEGIN {print "ORS = " ORS}' | cat -vte

RLENGTH
It represents the length of the string matched by match function. AWK's match function searches for a given string in the input-string.

awk 'BEGIN { if (match("One Two Three", "re")) { print RLENGTH } }'

RS
It represents (input) record separator and its default value is newline.

awk 'BEGIN {print "RS = " RS}' | cat -vte

RSTART
It represents the first position in the string matched by match function.

awk 'BEGIN { if (match("One Two Three", "Thre")) { print RSTART } }'

SUBSEP
It represents the separator character for array subscripts and its default value is \034.

awk 'BEGIN { print "SUBSEP = " SUBSEP }' | cat -vte

$0
It represents the entire input record.

awk '{print $0}' marks.txt

$n
It represents the nth field in the current record where the fields are separated by FS.

awk '{print $3 "\t" $4}' marks.txt

ARGIND
It represents the index in ARGV of the current file being processed.

awk '{ 
   print "ARGIND   = ", ARGIND; print "Filename = ", ARGV[ARGIND] 
}' junk1 junk2 junk3


BINMODE
It is used to specify binary mode for all file I/O on non-POSIX systems. Numeric values of 1, 2, or 3 specify that input files, output files, or all files, respectively, should use binary I/O. String values of r or w specify that input files or output files, respectively, should use binary I/O. String values of rw or wr specify that all files should use binary I/O.

ERRNO
A string indicates an error when a redirection fails for getline or if close call fails.

awk 'BEGIN { ret = getline < "junk.txt"; if (ret == -1) print "Error:", ERRNO }'

FIELDWIDTHS
A space separated list of field widths variable is set, GAWK parses the input into fields of fixed width, instead of using the value of the FS variable as the field separator.

IGNORECASE
When this variable is set, GAWK becomes case-insensitive.

awk 'BEGIN{IGNORECASE = 1} /amit/' marks.txt

LINT
It provides dynamic control of the --lint option from the GAWK program. When this variable is set, GAWK prints lint warnings.

awk 'BEGIN {LINT = 1; a}'

PROCINFO
This is an associative array containing information about the process, such as real and effective UID numbers, process ID number, and so on.

awk 'BEGIN { print PROCINFO["pid"] }'

TEXTDOMAIN
It represents the text domain of the AWK program. It is used to find the localized translations for the program's strings.

awk 'BEGIN { print TEXTDOMAIN }'
